{"version":3,"sources":["components/Header.js","components/Customer.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_useState","useState","_useState2","Object","slicedToArray","show","setShow","_useState3","_useState4","name","setName","_useState5","_useState6","phoneNo","setPhoneNo","_useState7","_useState8","requirement","setRequirement","_useState9","_useState10","address","setAddress","_useState11","_useState12","source","setSource","_useState13","_useState14","day","setDay","_useState15","_useState16","notes","setNotes","_useState17","_useState18","potential","setPotential","data","react_default","a","createElement","onSubmit","e","preventDefault","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","setTimeout","document","location","reload","handleSubmit","type","onClick","onChange","target","value","Customer","_id","update_post","setUpdate","_address","_day","_name","_notes","_phoneNo","_requirement","_source","_potential","style","width","id","backgroundColor","toLowerCase","concat","Appcept","then","res","status","console","log","catch","updateOne","Table","customers","map","customer","components_Customer","assign","key","className","App","setCustomer","filter","setFilter","useEffect","json","components_Header","components_Table","length","match","Boolean","window","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.013a4d4b.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Header = props => {\n    const [show, setShow] = useState(false);\n    const [name, setName] = useState('');\n    const [phoneNo, setPhoneNo] = useState('');\n    const [requirement, setRequirement] = useState('');\n    const [address, setAddress] = useState('');\n    const [source, setSource] = useState('');\n    const [day, setDay] = useState('');\n    const [notes, setNotes] = useState('');\n    const [potential, setPotential] = useState('');\n\n    const data = {name, phoneNo, requirement, source, address, day, notes, potential};\n    function handleSubmit(e) {\n        e.preventDefault();\n    \n        //fetch('http://localhost:4000/customers', {\n        fetch(`https://customers-apis.herokuapp.com/customers/`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n        setTimeout(() => document.location.reload(), 1000)\n    }\n\n    return(\n        <form onSubmit={e => handleSubmit(e)}>\n            <button type=\"button\" onClick={() => setShow(!show)}>Them khach hang</button>\n            { \n                show ?\n                    <div>\n                        <p>\n                            Ten khach hang: {' '}\n                            <input type=\"text\" onChange={(e) => setName(e.target.value)}/>\n                        </p>\n                        <p>\n                            So dien thoai: {' '}\n                            <input type=\"text\" onChange={(e) => setPhoneNo(e.target.value)}/>\n                        </p>\n                        <p>\n                            Nhu cau: {' '}\n                            <input type=\"text\" onChange={(e) => setRequirement(e.target.value)}/>\n                        </p>\n                        <p>\n                            Dia chi: {' '}\n                            <input type=\"text\" onChange={(e) => setAddress(e.target.value)}/>\n                        </p>\n                        <p>\n                            Nguon: {' '}\n                            <input type=\"text\" onChange={(e) => setSource(e.target.value)}/>\n                        </p>\n                        <p>\n                            Ngay: {' '}\n                            <input type=\"text\" onChange={(e) => setDay(e.target.value)}/>\n                        </p>\n                        <p>\n                            Ghi chu: {' '}\n                            <input type=\"text\" onChange={(e) => setNotes(e.target.value)}/>\n                        </p>\n                        <p>\n                            Tiem nang: {' '}\n                            <input type=\"text\" onChange={(e) => setPotential(e.target.value)}/>\n                        </p>\n                        <button>Them khach hang</button>\n                    </div>\n                : ''\n            }\n        </form>\n    )\n}\n\nexport default Header","import React, { useState } from 'react'\n\nconst Customer = props => {\n    const { \n        address, day, name, notes, phoneNo,\n        requirement, source, potential, _id\n    } = props;\n    const [update_post, setUpdate] = useState(true);\n    const [_address, setAddress] = useState(address);\n    const [_day, setDay] = useState(day);\n    const [_name, setName] = useState(name);\n    const [_notes, setNotes] = useState(notes);\n    const [_phoneNo, setPhoneNo] = useState(phoneNo);\n    const [_requirement, setRequirement] = useState(requirement);\n    const [_source, setSource] = useState(source);\n    const [_potential, setPotential] = useState(potential);\n    function updateOne(id, e) {\n        const data = {\n            _address, _day, _name, _notes,\n            _phoneNo, _requirement, _source, _potential\n        }\n        if(e.target.name === name)\n        fetch(`https://customers-apis.herokuapp.com/customers/${id}/`, {\n        //fetch(`http://localhost:4000/customers/${id}`, {\n            method: 'PUT',\n            headers: {\n                'Appcept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n        .then(res => {\n            if(res.status === 200)\n                console.log('exitst')\n            else console.log('file doesnt exitst')\n        })\n        .catch(e => console.log(e))\n        setUpdate(true)\n        setTimeout(() => document.location.reload(), 1000);\n    }\n    function deleteOne(id) {\n        fetch(`https://customers-apis.herokuapp.com/customers/${id}/`, {\n        //fetch(`http://localhost:4000/customers/${id}`, {\n            method: 'DELETE'\n        })\n        .then(res => res)\n        .catch(e => e)\n        setTimeout(() => document.location.reload(), 1000);\n    }\n\n    return(\n        <tr>\n            <td>{update_post ? day : <input style={{width: '75%'}} onChange={e => setDay(e.target.value)} value={_day}/>}</td>\n            <td>{update_post ? name : <input style={{width: '75%'}} onChange={e => setName(e.target.value)} value={_name}/>}</td>\n            <td>{update_post ? phoneNo : <input style={{width: '75%'}} onChange={e => setPhoneNo(e.target.value)} value={_phoneNo}/>}</td>\n            <td>{update_post ? requirement : <input style={{width: '75%'}} onChange={e => setRequirement(e.target.value)} value={_requirement}/>}</td>\n            <td>{update_post ? address : <input style={{width: '75%'}} onChange={e => setAddress(e.target.value)} value={_address}/>}</td>\n            <td>{update_post ? source : <input style={{width: '75%'}} onChange={e => setSource(e.target.value)} value={_source}/>}</td>\n            <td id=\"potential\" style={{backgroundColor: potential.toLowerCase() === 'x' ? 'red' : 'none'}}>{update_post ? potential : <input style={{width: '75%'}} onChange={e => setPotential(e.target.value)} value={_potential}/>}</td>\n            <td>{update_post ? notes : <input style={{width: '75%'}} onChange={e => setNotes(e.target.value)} value={_notes}/>}</td>\n            <td>\n                {update_post ? <button onClick={() => setUpdate(false)}>Sua</button> :<button onClick={(e) => updateOne(_id, e)} name={name}>Cap nhat</button>}\n                {' '}\n                <button onClick={() => deleteOne(_id)}>Xoa</button>\n            </td>\n        </tr>\n    )\n}\n\nexport default Customer","import React from 'react'\nimport Customer from './Customer'\n\nconst Table = props => {\n    const customers = props.customers.map(customer => (\n        <Customer key={customer._id} {...customer}/>\n    ))\n    return(\n        <div className=\"w3-responsive\">\n            <table className=\"w3-table w3-hoverable w3-centered\">\n                <thead className=\"w3-black w3-large\">\n                    <tr className=\"w3-border\">\n                        <th>Ngay</th>\n                        <th>Ten khach hang</th>\n                        <th>So dien thoai</th>\n                        <th>Nhu cau</th>\n                        <th>Dia chi</th>\n                        <th>Nguon</th>\n                        <th>Tiem nang</th>\n                        <th>Ghi chu</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { customers }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Table","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Table from './components/Table'\nfunction App() {\n  const [customers, setCustomer] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    //fetch('https://customers-apis.herokuapp.com/customers/', {\n    fetch('http://localhost:4000/customers', {\n      method: 'GET',\n      headers: {\n        'Appcept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        setCustomer(data);\n      })\n  }, []);\n  return (\n    <div>\n      <Header/>\n      <div>\n        <input value={filter} onChange={e => setFilter(e.target.value)}/>\n        <button onClick={() => setFilter('')} type=\"button\">Xoa</button>\n      </div>\n      <Table customers={filter.length > 0 ? customers.filter(customer => customer.phoneNo.match(filter)) : customers}/>  \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}